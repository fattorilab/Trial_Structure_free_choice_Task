// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class CSVHandler : MonoBehaviour
{
    public TextAsset File;
    public float size;
    public GameObject Punkt1;

    void Start()
    {
        Load(File);
        Debug.Log(Find_nr("3").c1x);

        Punkt1.transform.position = new Vector3(2, 2, 2);
        

    }

    int zaehler = 1;

    // Update is called once per frame
    void Update()
    {
        Punkt1.transform.position = new Vector3(System.Int32.Parse(Find_nr(zaehler.ToString()).c1x),
                                                System.Int32.Parse(Find_nr(zaehler.ToString()).c1y),
                                                System.Int32.Parse(Find_nr(zaehler.ToString()).c1z)) * size * 0.0001f;

        if (zaehler == 45)
        {
            Debug.Log(Find_nr(zaehler.ToString()).c1x);
        }

        zaehler += 1;
        if (zaehler > 99)
        {
            
            zaehler = 1;
        }
    }


    public class Row
    {
        public string nr;
        public string c1x;
        public string c1y;
        public string c1z;
        public string c2x;
        public string c2y;
        public string c2z;
        public string c3x;
        public string c3y;
        public string c3z;
        public string c4x;
        public string c4y;
        public string c4z;
        public string c5x;
        public string c5y;
        public string c5z;
        public string c6x;
        public string c6y;
        public string c6z;
        public string c7x;
        public string c7y;
        public string c7z;
        public string c8x;
        public string c8y;
        public string c8z;
        public string c9x;
        public string c9y;
        public string c9z;
        public string c10x;
        public string c10y;
        public string c10z;
        public string c11x;
        public string c11y;
        public string c11z;
        public string c12x;
        public string c12y;
        public string c12z;
        public string c13x;
        public string c13y;
        public string c13z;
        public string c14x;
        public string c14y;
        public string c14z;
        public string c15x;
        public string c15y;
        public string c15z;
        public string c16x;
        public string c16y;
        public string c16z;

    }

    List<Row> rowList = new List<Row>();
    bool isLoaded = false;

    public bool IsLoaded()
    {
        return isLoaded;
    }

    public List<Row> GetRowList()
    {
        return rowList;
    }

    public void Load(TextAsset csv)
    {
        rowList.Clear();
        string[][] grid = CsvParser2.Parse(csv.text);
        for (int i = 1; i < grid.Length; i++)
        {
            Row row = new Row();
            row.nr = grid[i][0];
            row.c1x = grid[i][1];
            row.c1y = grid[i][2];
            row.c1z = grid[i][3];
            row.c2x = grid[i][4];
            row.c2y = grid[i][5];
            row.c2z = grid[i][6];
            row.c3x = grid[i][7];
            row.c3y = grid[i][8];
            row.c3z = grid[i][9];
            row.c4x = grid[i][10];
            row.c4y = grid[i][11];
            row.c4z = grid[i][12];
            row.c5x = grid[i][13];
            row.c5y = grid[i][14];
            row.c5z = grid[i][15];
            row.c6x = grid[i][16];
            row.c6y = grid[i][17];
            row.c6z = grid[i][18];
            row.c7x = grid[i][19];
            row.c7y = grid[i][20];
            row.c7z = grid[i][21];
            row.c8x = grid[i][22];
            row.c8y = grid[i][23];
            row.c8z = grid[i][24];
            row.c9x = grid[i][25];
            row.c9y = grid[i][26];
            row.c9z = grid[i][27];
            row.c10x = grid[i][28];
            row.c10y = grid[i][29];
            row.c10z = grid[i][30];
            row.c11x = grid[i][31];
            row.c11y = grid[i][32];
            row.c11z = grid[i][33];
            row.c12x = grid[i][34];
            row.c12y = grid[i][35];
            row.c12z = grid[i][36];
            row.c13x = grid[i][37];
            row.c13y = grid[i][38];
            row.c13z = grid[i][39];
            row.c14x = grid[i][40];
            row.c14y = grid[i][41];
            row.c14z = grid[i][42];
            row.c15x = grid[i][43];
            row.c15y = grid[i][44];
            row.c15z = grid[i][45];
            row.c16x = grid[i][46];
            row.c16y = grid[i][47];
            row.c16z = grid[i][48];

            rowList.Add(row);
        }
        isLoaded = true;
    }

    public int NumRows()
    {
        return rowList.Count;
    }

    public Row GetAt(int i)
    {
        if (rowList.Count <= i)
            return null;
        return rowList[i];
    }

    public Row Find_nr(string find)
    {
        return rowList.Find(x => x.nr == find);
    }
    public List<Row> FindAll_nr(string find)
    {
        return rowList.FindAll(x => x.nr == find);
    }
    public Row Find_c1x(string find)
    {
        return rowList.Find(x => x.c1x == find);
    }
    public List<Row> FindAll_c1x(string find)
    {
        return rowList.FindAll(x => x.c1x == find);
    }
    public Row Find_c1y(string find)
    {
        return rowList.Find(x => x.c1y == find);
    }
    public List<Row> FindAll_c1y(string find)
    {
        return rowList.FindAll(x => x.c1y == find);
    }
    public Row Find_c1z(string find)
    {
        return rowList.Find(x => x.c1z == find);
    }
    public List<Row> FindAll_c1z(string find)
    {
        return rowList.FindAll(x => x.c1z == find);
    }
    public Row Find_c2x(string find)
    {
        return rowList.Find(x => x.c2x == find);
    }
    public List<Row> FindAll_c2x(string find)
    {
        return rowList.FindAll(x => x.c2x == find);
    }
    public Row Find_c2y(string find)
    {
        return rowList.Find(x => x.c2y == find);
    }
    public List<Row> FindAll_c2y(string find)
    {
        return rowList.FindAll(x => x.c2y == find);
    }
    public Row Find_c2z(string find)
    {
        return rowList.Find(x => x.c2z == find);
    }
    public List<Row> FindAll_c2z(string find)
    {
        return rowList.FindAll(x => x.c2z == find);
    }
    public Row Find_c3x(string find)
    {
        return rowList.Find(x => x.c3x == find);
    }
    public List<Row> FindAll_c3x(string find)
    {
        return rowList.FindAll(x => x.c3x == find);
    }
    public Row Find_c3y(string find)
    {
        return rowList.Find(x => x.c3y == find);
    }
    public List<Row> FindAll_c3y(string find)
    {
        return rowList.FindAll(x => x.c3y == find);
    }
    public Row Find_c3z(string find)
    {
        return rowList.Find(x => x.c3z == find);
    }
    public List<Row> FindAll_c3z(string find)
    {
        return rowList.FindAll(x => x.c3z == find);
    }
    public Row Find_c4x(string find)
    {
        return rowList.Find(x => x.c4x == find);
    }
    public List<Row> FindAll_c4x(string find)
    {
        return rowList.FindAll(x => x.c4x == find);
    }
    public Row Find_c4y(string find)
    {
        return rowList.Find(x => x.c4y == find);
    }
    public List<Row> FindAll_c4y(string find)
    {
        return rowList.FindAll(x => x.c4y == find);
    }
    public Row Find_c4z(string find)
    {
        return rowList.Find(x => x.c4z == find);
    }
    public List<Row> FindAll_c4z(string find)
    {
        return rowList.FindAll(x => x.c4z == find);
    }
    public Row Find_c5x(string find)
    {
        return rowList.Find(x => x.c5x == find);
    }
    public List<Row> FindAll_c5x(string find)
    {
        return rowList.FindAll(x => x.c5x == find);
    }
    public Row Find_c5y(string find)
    {
        return rowList.Find(x => x.c5y == find);
    }
    public List<Row> FindAll_c5y(string find)
    {
        return rowList.FindAll(x => x.c5y == find);
    }
    public Row Find_c5z(string find)
    {
        return rowList.Find(x => x.c5z == find);
    }
    public List<Row> FindAll_c5z(string find)
    {
        return rowList.FindAll(x => x.c5z == find);
    }
    public Row Find_c6x(string find)
    {
        return rowList.Find(x => x.c6x == find);
    }
    public List<Row> FindAll_c6x(string find)
    {
        return rowList.FindAll(x => x.c6x == find);
    }
    public Row Find_c6y(string find)
    {
        return rowList.Find(x => x.c6y == find);
    }
    public List<Row> FindAll_c6y(string find)
    {
        return rowList.FindAll(x => x.c6y == find);
    }
    public Row Find_c6z(string find)
    {
        return rowList.Find(x => x.c6z == find);
    }
    public List<Row> FindAll_c6z(string find)
    {
        return rowList.FindAll(x => x.c6z == find);
    }
    public Row Find_c7x(string find)
    {
        return rowList.Find(x => x.c7x == find);
    }
    public List<Row> FindAll_c7x(string find)
    {
        return rowList.FindAll(x => x.c7x == find);
    }
    public Row Find_c7y(string find)
    {
        return rowList.Find(x => x.c7y == find);
    }
    public List<Row> FindAll_c7y(string find)
    {
        return rowList.FindAll(x => x.c7y == find);
    }
    public Row Find_c7z(string find)
    {
        return rowList.Find(x => x.c7z == find);
    }
    public List<Row> FindAll_c7z(string find)
    {
        return rowList.FindAll(x => x.c7z == find);
    }
    public Row Find_c8x(string find)
    {
        return rowList.Find(x => x.c8x == find);
    }
    public List<Row> FindAll_c8x(string find)
    {
        return rowList.FindAll(x => x.c8x == find);
    }
    public Row Find_c8y(string find)
    {
        return rowList.Find(x => x.c8y == find);
    }
    public List<Row> FindAll_c8y(string find)
    {
        return rowList.FindAll(x => x.c8y == find);
    }
    public Row Find_c8z(string find)
    {
        return rowList.Find(x => x.c8z == find);
    }
    public List<Row> FindAll_c8z(string find)
    {
        return rowList.FindAll(x => x.c8z == find);
    }
    public Row Find_c9x(string find)
    {
        return rowList.Find(x => x.c9x == find);
    }
    public List<Row> FindAll_c9x(string find)
    {
        return rowList.FindAll(x => x.c9x == find);
    }
    public Row Find_c9y(string find)
    {
        return rowList.Find(x => x.c9y == find);
    }
    public List<Row> FindAll_c9y(string find)
    {
        return rowList.FindAll(x => x.c9y == find);
    }
    public Row Find_c9z(string find)
    {
        return rowList.Find(x => x.c9z == find);
    }
    public List<Row> FindAll_c9z(string find)
    {
        return rowList.FindAll(x => x.c9z == find);
    }
    public Row Find_c10x(string find)
    {
        return rowList.Find(x => x.c10x == find);
    }
    public List<Row> FindAll_c10x(string find)
    {
        return rowList.FindAll(x => x.c10x == find);
    }
    public Row Find_c10y(string find)
    {
        return rowList.Find(x => x.c10y == find);
    }
    public List<Row> FindAll_c10y(string find)
    {
        return rowList.FindAll(x => x.c10y == find);
    }
    public Row Find_c10z(string find)
    {
        return rowList.Find(x => x.c10z == find);
    }
    public List<Row> FindAll_c10z(string find)
    {
        return rowList.FindAll(x => x.c10z == find);
    }
    public Row Find_c11x(string find)
    {
        return rowList.Find(x => x.c11x == find);
    }
    public List<Row> FindAll_c11x(string find)
    {
        return rowList.FindAll(x => x.c11x == find);
    }
    public Row Find_c11y(string find)
    {
        return rowList.Find(x => x.c11y == find);
    }
    public List<Row> FindAll_c11y(string find)
    {
        return rowList.FindAll(x => x.c11y == find);
    }
    public Row Find_c11z(string find)
    {
        return rowList.Find(x => x.c11z == find);
    }
    public List<Row> FindAll_c11z(string find)
    {
        return rowList.FindAll(x => x.c11z == find);
    }
    public Row Find_c12x(string find)
    {
        return rowList.Find(x => x.c12x == find);
    }
    public List<Row> FindAll_c12x(string find)
    {
        return rowList.FindAll(x => x.c12x == find);
    }
    public Row Find_c12y(string find)
    {
        return rowList.Find(x => x.c12y == find);
    }
    public List<Row> FindAll_c12y(string find)
    {
        return rowList.FindAll(x => x.c12y == find);
    }
    public Row Find_c12z(string find)
    {
        return rowList.Find(x => x.c12z == find);
    }
    public List<Row> FindAll_c12z(string find)
    {
        return rowList.FindAll(x => x.c12z == find);
    }
    public Row Find_c13x(string find)
    {
        return rowList.Find(x => x.c13x == find);
    }
    public List<Row> FindAll_c13x(string find)
    {
        return rowList.FindAll(x => x.c13x == find);
    }
    public Row Find_c13y(string find)
    {
        return rowList.Find(x => x.c13y == find);
    }
    public List<Row> FindAll_c13y(string find)
    {
        return rowList.FindAll(x => x.c13y == find);
    }
    public Row Find_c13z(string find)
    {
        return rowList.Find(x => x.c13z == find);
    }
    public List<Row> FindAll_c13z(string find)
    {
        return rowList.FindAll(x => x.c13z == find);
    }
    public Row Find_c14x(string find)
    {
        return rowList.Find(x => x.c14x == find);
    }
    public List<Row> FindAll_c14x(string find)
    {
        return rowList.FindAll(x => x.c14x == find);
    }
    public Row Find_c14y(string find)
    {
        return rowList.Find(x => x.c14y == find);
    }
    public List<Row> FindAll_c14y(string find)
    {
        return rowList.FindAll(x => x.c14y == find);
    }
    public Row Find_c14z(string find)
    {
        return rowList.Find(x => x.c14z == find);
    }
    public List<Row> FindAll_c14z(string find)
    {
        return rowList.FindAll(x => x.c14z == find);
    }
    public Row Find_c15x(string find)
    {
        return rowList.Find(x => x.c15x == find);
    }
    public List<Row> FindAll_c15x(string find)
    {
        return rowList.FindAll(x => x.c15x == find);
    }
    public Row Find_c15y(string find)
    {
        return rowList.Find(x => x.c15y == find);
    }
    public List<Row> FindAll_c15y(string find)
    {
        return rowList.FindAll(x => x.c15y == find);
    }
    public Row Find_c15z(string find)
    {
        return rowList.Find(x => x.c15z == find);
    }
    public List<Row> FindAll_c15z(string find)
    {
        return rowList.FindAll(x => x.c15z == find);
    }
    public Row Find_c16x(string find)
    {
        return rowList.Find(x => x.c16x == find);
    }
    public List<Row> FindAll_c16x(string find)
    {
        return rowList.FindAll(x => x.c16x == find);
    }
    public Row Find_c16y(string find)
    {
        return rowList.Find(x => x.c16y == find);
    }
    public List<Row> FindAll_c16y(string find)
    {
        return rowList.FindAll(x => x.c16y == find);
    }
    public Row Find_c16z(string find)
    {
        return rowList.Find(x => x.c16z == find);
    }
    public List<Row> FindAll_c16z(string find)
    {
        return rowList.FindAll(x => x.c16z == find);
    }

}